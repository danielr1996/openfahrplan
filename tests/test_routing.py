import pytest

from openfahrplan.lib.raptor import raptor_route
from openfahrplan import feed, raptor_index


@pytest.mark.parametrize(
    "src,dst,expected",
    [
        ("de:09564:654:11:1","de:09563:2611:0:1", ['de:09564:654:11:1',
                                                   'de:09564:654:13:7',
                                                   'de:09564:1171:0:1',
                                                   'de:09564:760:0:1',
                                                   'de:09564:761:0:1',
                                                   'de:09564:701:3:6',
                                                   'de:09564:235:13:1',
                                                   'de:09564:251:0:1',
                                                   'de:09564:275:13:8',
                                                   'de:09564:1259:0:1',
                                                   'de:09564:1258:0:1',
                                                   'de:09564:1257:0:1',
                                                   'de:09564:1256:0:1',
                                                   'de:09564:1251:0:3',
                                                   'de:09564:1250:0:1',
                                                   'de:09563:1299:0:3',
                                                   'de:09563:2449:0:2',
                                                   'de:09563:2454:0:4',
                                                   'de:09563:2455:0:2',
                                                   'de:09563:2456:0:2',
                                                   'de:09563:2457:0:2',
                                                   'de:09563:2458:0:2',
                                                   'de:09563:2164:53:C',
                                                   'de:09563:2163:23:1',
                                                   'de:09563:2162:0:1',
                                                   'de:09563:2131:0:6',
                                                   'de:09563:2362:53:5',
                                                   'de:09563:2392:0:1',
                                                   'de:09563:2363:0:1',
                                                   'de:09563:2396:0:1',
                                                   'de:09563:2364:0:1',
                                                   'de:09563:2369:0:1',
                                                   'de:09563:2371:23:1',
                                                   'de:09563:2372:0:2',
                                                   'de:09563:2373:0:2',
                                                   'de:09563:2374:0:2',
                                                   'de:09563:2375:0:1',
                                                   'de:09563:2181:0:B',
                                                   'de:09563:2360:0:2',
                                                   'de:09563:2359:0:3',
                                                   'de:09563:2386:23:2',
                                                   'de:09563:2390:23:7',
                                                   'de:09563:2384:0:2',
                                                   'de:09563:2383:0:3',
                                                   'de:09563:2379:0:1',
                                                   'de:09563:2380:0:1',
                                                   'de:09563:2381:0:1',
                                                   'de:09563:2382:0:1',
                                                   'de:09563:2611:0:1']),
        ("de:09564:333:11:1", "de:09564:101:11:1", ['de:09564:333:11:1','de:09564:510:11:U2','de:09564:510:11:U1','de:09564:511:11:1', 'de:09564:101:11:1']),
        ("de:09564:333:11:1", "de:09564:332:11:1", ['de:09564:333:11:1', 'de:09564:332:11:1']),
],
)

def test_routing(src, dst, expected):
    res = raptor_route(raptor_index, src, dst)
    assert res["stops"] == expected
